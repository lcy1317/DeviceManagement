// Code generated by go-swagger; DO NOT EDIT.

package qq

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostSendPrivateMsgHandlerFunc turns a function with the right signature into a post send private msg handler
type PostSendPrivateMsgHandlerFunc func(PostSendPrivateMsgParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostSendPrivateMsgHandlerFunc) Handle(params PostSendPrivateMsgParams) middleware.Responder {
	return fn(params)
}

// PostSendPrivateMsgHandler interface for that can handle valid post send private msg params
type PostSendPrivateMsgHandler interface {
	Handle(PostSendPrivateMsgParams) middleware.Responder
}

// NewPostSendPrivateMsg creates a new http.Handler for the post send private msg operation
func NewPostSendPrivateMsg(ctx *middleware.Context, handler PostSendPrivateMsgHandler) *PostSendPrivateMsg {
	return &PostSendPrivateMsg{Context: ctx, Handler: handler}
}

/* PostSendPrivateMsg swagger:route POST /send_private_msg qq postSendPrivateMsg

private message

*/
type PostSendPrivateMsg struct {
	Context *middleware.Context
	Handler PostSendPrivateMsgHandler
}

func (o *PostSendPrivateMsg) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostSendPrivateMsgParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
