// Code generated by go-swagger; DO NOT EDIT.

package shebei

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetGetDeviceListFullHandlerFunc turns a function with the right signature into a get get device list full handler
type GetGetDeviceListFullHandlerFunc func(GetGetDeviceListFullParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGetDeviceListFullHandlerFunc) Handle(params GetGetDeviceListFullParams) middleware.Responder {
	return fn(params)
}

// GetGetDeviceListFullHandler interface for that can handle valid get get device list full params
type GetGetDeviceListFullHandler interface {
	Handle(GetGetDeviceListFullParams) middleware.Responder
}

// NewGetGetDeviceListFull creates a new http.Handler for the get get device list full operation
func NewGetGetDeviceListFull(ctx *middleware.Context, handler GetGetDeviceListFullHandler) *GetGetDeviceListFull {
	return &GetGetDeviceListFull{Context: ctx, Handler: handler}
}

/* GetGetDeviceListFull swagger:route GET /getDeviceListFull shebei getGetDeviceListFull

device record

*/
type GetGetDeviceListFull struct {
	Context *middleware.Context
	Handler GetGetDeviceListFullHandler
}

func (o *GetGetDeviceListFull) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetGetDeviceListFullParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
